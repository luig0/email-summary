import { GetServerSideProps } from 'next';
import Head from 'next/head';
import { useRouter } from 'next/router';
import styles from '@/styles/Home.module.css';
import { useEffect, useState } from 'react';

import Container from 'react-bootstrap/Container';
import Row from 'react-bootstrap/Row';
import Col from 'react-bootstrap/Col';

import * as db from '@/lib/database/Adapter';
import * as messages from '@/lib/Messages';
import LoginForm from '@/modules/auth/LoginForm';
import RegistrationForm from '@/modules/auth/RegistrationForm';

interface AppProps {
  loggedIn: boolean;
  emailAddress?: string;
}

export const getServerSideProps: GetServerSideProps<AppProps> = async (context) => {
  const { req, res } = context;
  const props: AppProps = { loggedIn: false };

  const sessionToken = req.cookies['session-token'];

  if (sessionToken) {
    try {
      const { email_address } = await db.getSessionAndUser(sessionToken);
      props.loggedIn = true;
      props.emailAddress = email_address;
    } catch (error: any) {
      if (error.message !== messages.SESSION_HAS_EXPIRED) console.log('index.tsx error:', error.message);
      else
        res.setHeader(
          'set-cookie',
          `session-token=deleted; Expires=Thu, 01 Jan 1970 00:00:00 GMT; Path=/; HttpOnly; SameSite=Strict`
        ); // session token is invalid; clear it
    }
  }

  return { props };
};

const App = (props: AppProps) => {
  const router = useRouter();
  const [showRegistrationForm, setShowRegistrationForm] = useState(false);

  useEffect(() => {
    if (props.loggedIn) router.push('/config');
  }, [props.loggedIn, router]);

  return (
    <Container className="mt-5">
      <Row>
        <Col></Col>
        <Col xs={6}>
          <h1>Welcome to my super secret website.</h1>
          {!showRegistrationForm && <LoginForm setShowRegistrationForm={setShowRegistrationForm} />}
          {showRegistrationForm && <RegistrationForm setShowRegistrationForm={setShowRegistrationForm} />}
        </Col>
        <Col></Col>
      </Row>
    </Container>
  );
};

const Home = (props: AppProps) => {
  return (
    <>
      <Head>
        <title>CNA: joint-summary</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className={styles.main}>
        <App {...props} />
      </main>
    </>
  );
};

export default Home;
